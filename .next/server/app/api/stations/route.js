/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stations/route";
exports.ids = ["app/api/stations/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstations%2Froute&page=%2Fapi%2Fstations%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstations%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstations%2Froute&page=%2Fapi%2Fstations%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstations%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_USUARIO_Desktop_APP_EXITOSA_app_exitosa_playerV4_main_src_app_api_stations_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/stations/route.ts */ \"(rsc)/./src/app/api/stations/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stations/route\",\n        pathname: \"/api/stations\",\n        filename: \"route\",\n        bundlePath: \"app/api/stations/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\APP-EXITOSA\\\\app-exitosa-playerV4-main\\\\src\\\\app\\\\api\\\\stations\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_USUARIO_Desktop_APP_EXITOSA_app_exitosa_playerV4_main_src_app_api_stations_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZzdGF0aW9ucyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc3RhdGlvbnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzdGF0aW9ucyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNVU1VBUklPJTVDRGVza3RvcCU1Q0FQUC1FWElUT1NBJTVDYXBwLWV4aXRvc2EtcGxheWVyVjQtbWFpbiU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDVVNVQVJJTyU1Q0Rlc2t0b3AlNUNBUFAtRVhJVE9TQSU1Q2FwcC1leGl0b3NhLXBsYXllclY0LW1haW4maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3NEO0FBQ25JO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxVU1VBUklPXFxcXERlc2t0b3BcXFxcQVBQLUVYSVRPU0FcXFxcYXBwLWV4aXRvc2EtcGxheWVyVjQtbWFpblxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxzdGF0aW9uc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3RhdGlvbnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zdGF0aW9uc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc3RhdGlvbnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxVU1VBUklPXFxcXERlc2t0b3BcXFxcQVBQLUVYSVRPU0FcXFxcYXBwLWV4aXRvc2EtcGxheWVyVjQtbWFpblxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxzdGF0aW9uc1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstations%2Froute&page=%2Fapi%2Fstations%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstations%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/stations/route.ts":
/*!***************************************!*\
  !*** ./src/app/api/stations/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_dataManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/dataManager */ \"(rsc)/./src/lib/dataManager.ts\");\n// src/app/api/stations/route.ts - CON CACHÉ COMPLETO\n\n\n// GET - Obtener todas las estaciones\nasync function GET(request) {\n    try {\n        // getStations ya implementa caché internamente\n        const stations = await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.getStations)();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: stations,\n            // Metadata adicional para debugging\n            _meta: {\n                cached: true,\n                count: stations.length,\n                timestamp: new Date().toISOString()\n            }\n        }, {\n            headers: {\n                // Headers de caché para el navegador\n                'Cache-Control': 'public, max-age=300, stale-while-revalidate=600',\n                'X-Content-Type-Options': 'nosniff',\n                'X-Frame-Options': 'DENY'\n            }\n        });\n    } catch (error) {\n        console.error('Error al obtener estaciones:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al obtener estaciones',\n            _meta: {\n                timestamp: new Date().toISOString()\n            }\n        }, {\n            status: 500\n        });\n    }\n}\n// POST - Crear nueva estación\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        console.log('Creando nueva estación:', body);\n        // Validación básica\n        if (!body.name || !body.url) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Nombre y URL son requeridos'\n            }, {\n                status: 400\n            });\n        }\n        // createStation invalida los cachés automáticamente\n        const station = await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.createStation)(body);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: station,\n            _meta: {\n                action: 'created',\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('Error al crear estación:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al crear estación'\n        }, {\n            status: 500\n        });\n    }\n}\n// PUT - Actualizar estación existente\nasync function PUT(request) {\n    try {\n        const body = await request.json();\n        console.log('Actualizando estación:', body);\n        const { id, ...updates } = body;\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'ID de estación requerido'\n            }, {\n                status: 400\n            });\n        }\n        // updateStation invalida los cachés automáticamente\n        const station = await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.updateStation)(id, updates);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: station,\n            _meta: {\n                action: 'updated',\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('Error al actualizar estación:', error);\n        // Manejo de errores específicos\n        if (error instanceof Error && error.message === 'Estación no encontrada') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Estación no encontrada'\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al actualizar estación'\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Eliminar estación\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const id = searchParams.get('id');\n        console.log('Eliminando estación:', id);\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'ID de estación requerido'\n            }, {\n                status: 400\n            });\n        }\n        // deleteStation invalida los cachés automáticamente\n        await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.deleteStation)(id);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            _meta: {\n                action: 'deleted',\n                deletedId: id,\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('Error al eliminar estación:', error);\n        // Manejo de errores específicos\n        if (error instanceof Error && error.message === 'Estación no encontrada') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Estación no encontrada'\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al eliminar estación'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/stations/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/cache.ts":
/*!**************************!*\
  !*** ./src/lib/cache.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheManager: () => (/* binding */ cacheManager),\n/* harmony export */   currentProgramCache: () => (/* binding */ currentProgramCache),\n/* harmony export */   currentProgramCacheUtils: () => (/* binding */ currentProgramCacheUtils),\n/* harmony export */   imagesCache: () => (/* binding */ imagesCache),\n/* harmony export */   imagesCacheUtils: () => (/* binding */ imagesCacheUtils),\n/* harmony export */   programsCache: () => (/* binding */ programsCache),\n/* harmony export */   programsCacheUtils: () => (/* binding */ programsCacheUtils),\n/* harmony export */   stationsCache: () => (/* binding */ stationsCache),\n/* harmony export */   stationsCacheUtils: () => (/* binding */ stationsCacheUtils),\n/* harmony export */   warmUpCache: () => (/* binding */ warmUpCache)\n/* harmony export */ });\n/* harmony import */ var node_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-cache */ \"(rsc)/./node_modules/node-cache/index.js\");\n/* harmony import */ var node_cache__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_cache__WEBPACK_IMPORTED_MODULE_0__);\n// src/lib/cache.ts\n\n// Configuración de diferentes cachés con TTL específicos\nconst cacheConfig = {\n    // Datos que cambian poco frecuentemente\n    stations: {\n        stdTTL: 3600,\n        checkperiod: 600\n    },\n    programs: {\n        stdTTL: 1800,\n        checkperiod: 300\n    },\n    currentProgram: {\n        stdTTL: 60,\n        checkperiod: 30\n    },\n    images: {\n        stdTTL: 86400,\n        checkperiod: 3600\n    }\n};\n// Crear instancias de caché\nconst stationsCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.stations);\nconst programsCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.programs);\nconst currentProgramCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.currentProgram);\nconst imagesCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.images);\nclass CacheManager {\n    constructor(){\n        this.stats = new Map();\n        // Inicializar estadísticas\n        [\n            'stations',\n            'programs',\n            'currentProgram',\n            'images'\n        ].forEach((cache)=>{\n            this.stats.set(cache, {\n                hits: 0,\n                misses: 0,\n                sets: 0,\n                deletes: 0,\n                hitRate: 0\n            });\n        });\n        // Eventos de caché para estadísticas\n        this.setupCacheEvents();\n    }\n    setupCacheEvents() {\n        // Configurar eventos para cada caché\n        const caches = [\n            {\n                name: 'stations',\n                instance: stationsCache\n            },\n            {\n                name: 'programs',\n                instance: programsCache\n            },\n            {\n                name: 'currentProgram',\n                instance: currentProgramCache\n            },\n            {\n                name: 'images',\n                instance: imagesCache\n            }\n        ];\n        caches.forEach(({ name, instance })=>{\n            instance.on('hit', ()=>this.recordHit(name));\n            instance.on('miss', ()=>this.recordMiss(name));\n            instance.on('set', ()=>this.recordSet(name));\n            instance.on('del', ()=>this.recordDelete(name));\n        });\n    }\n    recordHit(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.hits++;\n        this.updateHitRate(cacheName);\n    }\n    recordMiss(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.misses++;\n        this.updateHitRate(cacheName);\n    }\n    recordSet(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.sets++;\n    }\n    recordDelete(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.deletes++;\n    }\n    updateHitRate(cacheName) {\n        const stats = this.stats.get(cacheName);\n        const total = stats.hits + stats.misses;\n        stats.hitRate = total > 0 ? stats.hits / total * 100 : 0;\n    }\n    // Métodos públicos para obtener estadísticas\n    getStats(cacheName) {\n        if (cacheName) {\n            return this.stats.get(cacheName);\n        }\n        return this.stats;\n    }\n    // Limpiar todos los cachés\n    clearAll() {\n        stationsCache.flushAll();\n        programsCache.flushAll();\n        currentProgramCache.flushAll();\n        imagesCache.flushAll();\n        console.log('✅ Todos los cachés han sido limpiados');\n    }\n    // Obtener información de uso de memoria\n    getMemoryUsage() {\n        return {\n            stations: {\n                keys: stationsCache.keys().length,\n                size: JSON.stringify(stationsCache.data).length\n            },\n            programs: {\n                keys: programsCache.keys().length,\n                size: JSON.stringify(programsCache.data).length\n            },\n            currentProgram: {\n                keys: currentProgramCache.keys().length,\n                size: JSON.stringify(currentProgramCache.data).length\n            },\n            images: {\n                keys: imagesCache.keys().length,\n                size: JSON.stringify(imagesCache.data).length\n            }\n        };\n    }\n}\n// Instancia única del manager\nconst cacheManager = new CacheManager();\n// Funciones de caché específicas\n// Cache de estaciones\nconst stationsCacheUtils = {\n    get: (key)=>stationsCache.get(key),\n    set: (key, value, ttl)=>stationsCache.set(key, value, ttl || cacheConfig.stations.stdTTL),\n    del: (key)=>stationsCache.del(key),\n    has: (key)=>stationsCache.has(key),\n    flush: ()=>stationsCache.flushAll()\n};\n// Cache de programas\nconst programsCacheUtils = {\n    get: (key)=>programsCache.get(key),\n    set: (key, value, ttl)=>programsCache.set(key, value, ttl || cacheConfig.programs.stdTTL),\n    del: (key)=>programsCache.del(key),\n    has: (key)=>programsCache.has(key),\n    flush: ()=>programsCache.flushAll(),\n    // Método especial para invalidar programas de una estación\n    invalidateStation: (stationId)=>{\n        const keys = programsCache.keys();\n        keys.forEach((key)=>{\n            if (key.includes(stationId)) {\n                programsCache.del(key);\n            }\n        });\n    }\n};\n// Cache de programa actual\nconst currentProgramCacheUtils = {\n    get: (stationId)=>currentProgramCache.get(`current_${stationId}`),\n    set: (stationId, value)=>currentProgramCache.set(`current_${stationId}`, value),\n    del: (stationId)=>currentProgramCache.del(`current_${stationId}`),\n    has: (stationId)=>currentProgramCache.has(`current_${stationId}`),\n    flush: ()=>currentProgramCache.flushAll()\n};\n// Cache de imágenes procesadas\nconst imagesCacheUtils = {\n    get: (url)=>imagesCache.get(url),\n    set: (url, value, ttl)=>imagesCache.set(url, value, ttl || cacheConfig.images.stdTTL),\n    del: (url)=>imagesCache.del(url),\n    has: (url)=>imagesCache.has(url),\n    flush: ()=>imagesCache.flushAll()\n};\n// Función para precalentar el caché\nasync function warmUpCache() {\n    console.log('🔥 Calentando caché...');\n    try {\n        // Aquí puedes agregar lógica para precargar datos importantes\n        // Por ejemplo, cargar todas las estaciones\n        const { getStations } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./dataManager */ \"(rsc)/./src/lib/dataManager.ts\"));\n        const stations = await getStations();\n        stationsCacheUtils.set('all_stations', {\n            success: true,\n            data: stations\n        });\n        console.log('✅ Caché precalentado exitosamente');\n    } catch (error) {\n        console.error('❌ Error precalentando caché:', error);\n    }\n}\n// Exportar la instancia principal para uso directo si es necesario\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cache.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/dataManager.ts":
/*!********************************!*\
  !*** ./src/lib/dataManager.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProgram: () => (/* binding */ createProgram),\n/* harmony export */   createStation: () => (/* binding */ createStation),\n/* harmony export */   deleteProgram: () => (/* binding */ deleteProgram),\n/* harmony export */   deleteStation: () => (/* binding */ deleteStation),\n/* harmony export */   getCurrentProgram: () => (/* binding */ getCurrentProgram),\n/* harmony export */   getPrograms: () => (/* binding */ getPrograms),\n/* harmony export */   getProgramsByStation: () => (/* binding */ getProgramsByStation),\n/* harmony export */   getStations: () => (/* binding */ getStations),\n/* harmony export */   readData: () => (/* binding */ readData),\n/* harmony export */   updateProgram: () => (/* binding */ updateProgram),\n/* harmony export */   updateStation: () => (/* binding */ updateStation),\n/* harmony export */   writeData: () => (/* binding */ writeData)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache */ \"(rsc)/./src/lib/cache.ts\");\n// src/lib/dataManager.ts - VERSIÓN COMPLETA CON CACHÉ\n\n\n\nconst DATA_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'data.json');\n// Cache para el archivo completo (5 minutos)\nlet fileCache = {\n    data: null,\n    timestamp: 0\n};\nconst FILE_CACHE_TTL = 5 * 60 * 1000; // 5 minutos\n// Inicializar archivo de datos si no existe\nasync function initDataFile() {\n    try {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().access(DATA_FILE);\n    } catch  {\n        const initialData = {\n            stations: [\n                {\n                    id: \"lima\",\n                    name: \"Lima\",\n                    url: \"https://radios-player-exitosa.mediaserver.digital/exitosa.chiclayo\",\n                    image: \"/images/stations/1752245607379-f9si3p.jpg\",\n                    frequency: \"95.5 FM\",\n                    city: \"Lima, Perú\",\n                    description: \"La estación principal de Radio Exitosa en la capital del Perú\"\n                },\n                {\n                    id: \"arequipa\",\n                    name: \"Arequipa\",\n                    url: \"https://neptuno-3-audio.mediaserver.digital/e_arequipa\",\n                    image: \"/images/stations/1752245619584-g4ffj.jpg\",\n                    frequency: \"104.9 FM\",\n                    city: \"Arequipa, Perú\",\n                    description: \"Transmitiendo desde la Ciudad Blanca\"\n                },\n                {\n                    id: \"trujillo\",\n                    name: \"Trujillo\",\n                    url: \"https://radios-player-exitosa.mediaserver.digital/exitosa.trujillo\",\n                    image: \"/images/stations/1752245627866-a2gt25.jpg\",\n                    frequency: \"103.3 FM\",\n                    city: \"Trujillo, Perú\",\n                    description: \"La voz de la Ciudad de la Eterna Primavera\"\n                },\n                {\n                    id: \"chiclayo\",\n                    name: \"Chiclayo\",\n                    url: \"https://radios-player-exitosa.mediaserver.digital/exitosa.chiclayo\",\n                    image: \"/images/stations/1752245634342-tow063.jpg\",\n                    frequency: \"98.9 FM\",\n                    city: \"Chiclayo, Perú\",\n                    description: \"Conectando con el norte del Perú\"\n                }\n            ],\n            programs: []\n        };\n        // Agregar todos los programas para cada estación\n        const weekdayPrograms = [\n            {\n                name: \"La Hora Esotérica\",\n                host: \"Soralla De Los Angeles\",\n                start_time: \"00:00\",\n                end_time: \"01:00\"\n            },\n            {\n                name: \"Usted Tiene Derecho\",\n                host: \"Mario Camacho Perla\",\n                start_time: \"01:00\",\n                end_time: \"02:00\"\n            },\n            {\n                name: \"La Voz De Los Pueblos\",\n                host: \"Jack Miranda y Marcial De La Cruz\",\n                start_time: \"02:00\",\n                end_time: \"05:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Pedro Paredes\",\n                start_time: \"05:00\",\n                end_time: \"08:00\"\n            },\n            {\n                name: \"Hablemos Claro\",\n                host: \"Nicolás Lúcar\",\n                start_time: \"08:00\",\n                end_time: \"11:00\"\n            },\n            {\n                name: \"Exitosa Te Escucha\",\n                host: \"Katyusca Torres Aybar\",\n                start_time: \"11:00\",\n                end_time: \"14:00\"\n            },\n            {\n                name: \"Exitosa Deportes\",\n                host: \"Gonzalo Núñez, Óscar Paz y Jean Rodríguez\",\n                start_time: \"14:00\",\n                end_time: \"16:00\"\n            },\n            {\n                name: \"Contra El Tráfico\",\n                host: \"Ricardo Rondón\",\n                start_time: \"16:00\",\n                end_time: \"18:00\"\n            },\n            {\n                name: \"Médicos En Acción\",\n                host: \"Armando Massé\",\n                start_time: \"18:00\",\n                end_time: \"19:00\"\n            },\n            {\n                name: \"Informamos y Opinamos\",\n                host: \"Karina Novoa\",\n                start_time: \"19:00\",\n                end_time: \"22:00\"\n            },\n            {\n                name: \"Exitosa Noticias\",\n                host: \"Juriko Novoa\",\n                start_time: \"22:00\",\n                end_time: \"23:00\"\n            },\n            {\n                name: \"Despierta Tus Emociones\",\n                host: \"José Poicón\",\n                start_time: \"23:00\",\n                end_time: \"00:00\"\n            }\n        ];\n        const saturdayPrograms = [\n            {\n                name: \"La Hora Esotérica\",\n                host: \"Esotéricos\",\n                start_time: \"00:00\",\n                end_time: \"01:00\"\n            },\n            {\n                name: \"Educando Mis Emociones\",\n                host: \"Dra. Danila Villegas\",\n                start_time: \"01:00\",\n                end_time: \"02:00\"\n            },\n            {\n                name: \"La Voz De Los Pueblos\",\n                host: \"Jack Miranda\",\n                start_time: \"02:00\",\n                end_time: \"05:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Pedro Paredes\",\n                start_time: \"05:00\",\n                end_time: \"08:00\"\n            },\n            {\n                name: \"Hablemos Claro\",\n                host: \"Jesús Verde\",\n                start_time: \"08:00\",\n                end_time: \"11:00\"\n            },\n            {\n                name: \"Construyendo Cimientos Para El Futuro\",\n                host: \"Jose Cieza\",\n                start_time: \"11:00\",\n                end_time: \"12:00\"\n            },\n            {\n                name: \"Derrama Magisterial\",\n                host: \"Carlos Cornejo\",\n                start_time: \"12:00\",\n                end_time: \"13:00\"\n            },\n            {\n                name: \"Exitosa Deportes\",\n                host: \"Óscar Paz\",\n                start_time: \"13:00\",\n                end_time: \"15:00\"\n            },\n            {\n                name: \"Exitosa Sábado\",\n                host: \"Katyusca Torres Aybar\",\n                start_time: \"15:00\",\n                end_time: \"18:00\"\n            },\n            {\n                name: \"La Hora Del Volante\",\n                host: \"Tito Alvites\",\n                start_time: \"18:00\",\n                end_time: \"20:00\"\n            },\n            {\n                name: \"Exitosa Te Escucha\",\n                host: \"Jorge Valdez\",\n                start_time: \"20:00\",\n                end_time: \"22:00\"\n            },\n            {\n                name: \"Noche Esotérica\",\n                host: \"Vidente Hayimy\",\n                start_time: \"22:00\",\n                end_time: \"00:00\"\n            }\n        ];\n        const sundayPrograms = [\n            {\n                name: \"Noche Esotérica\",\n                host: \"Vidente Hayimy\",\n                start_time: \"00:00\",\n                end_time: \"01:00\"\n            },\n            {\n                name: \"La Voz de los Pueblos\",\n                host: \"Hierbero\",\n                start_time: \"01:00\",\n                end_time: \"02:00\"\n            },\n            {\n                name: \"La Voz de los Pueblos\",\n                host: \"Marcial de la Cruz\",\n                start_time: \"02:00\",\n                end_time: \"06:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Piura\",\n                start_time: \"06:00\",\n                end_time: \"07:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Cusco\",\n                start_time: \"07:00\",\n                end_time: \"08:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Arequipa\",\n                start_time: \"08:00\",\n                end_time: \"09:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Trujillo\",\n                start_time: \"09:00\",\n                end_time: \"10:00\"\n            },\n            {\n                name: \"En Defensa de la Verdad\",\n                host: \"Cecilia García\",\n                start_time: \"10:00\",\n                end_time: \"12:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Chiclayo\",\n                start_time: \"12:00\",\n                end_time: \"13:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Huancayo\",\n                start_time: \"13:00\",\n                end_time: \"14:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Huacho\",\n                start_time: \"14:00\",\n                end_time: \"15:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Ica\",\n                start_time: \"15:00\",\n                end_time: \"16:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Iquitos\",\n                start_time: \"16:00\",\n                end_time: \"17:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Tacna\",\n                start_time: \"17:00\",\n                end_time: \"18:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Tarapoto\",\n                start_time: \"18:00\",\n                end_time: \"19:00\"\n            },\n            {\n                name: \"Médicos en Acción\",\n                host: \"Daniel Bueno\",\n                start_time: \"19:00\",\n                end_time: \"21:00\"\n            },\n            {\n                name: \"Exitosa Deportes\",\n                host: \"Óscar Paz\",\n                start_time: \"21:00\",\n                end_time: \"22:00\"\n            },\n            {\n                name: \"Noche Esotérica\",\n                host: \"Vidente Hayimy\",\n                start_time: \"22:00\",\n                end_time: \"00:00\"\n            }\n        ];\n        let programId = 1;\n        // Para cada estación, agregar todos los programas\n        for (const station of initialData.stations){\n            // Programas de Lunes a Viernes\n            for (const program of weekdayPrograms){\n                initialData.programs.push({\n                    id: programId.toString(),\n                    station_id: station.id,\n                    name: program.name,\n                    host: program.host,\n                    start_time: program.start_time,\n                    end_time: program.end_time,\n                    image: '',\n                    days: [\n                        'Lunes',\n                        'Martes',\n                        'Miércoles',\n                        'Jueves',\n                        'Viernes'\n                    ]\n                });\n                programId++;\n            }\n            // Programas de Sábado\n            for (const program of saturdayPrograms){\n                initialData.programs.push({\n                    id: programId.toString(),\n                    station_id: station.id,\n                    name: program.name,\n                    host: program.host,\n                    start_time: program.start_time,\n                    end_time: program.end_time,\n                    image: '',\n                    days: [\n                        'Sábado'\n                    ]\n                });\n                programId++;\n            }\n            // Programas de Domingo\n            for (const program of sundayPrograms){\n                initialData.programs.push({\n                    id: programId.toString(),\n                    station_id: station.id,\n                    name: program.name,\n                    host: program.host,\n                    start_time: program.start_time,\n                    end_time: program.end_time,\n                    image: '',\n                    days: [\n                        'Domingo'\n                    ]\n                });\n                programId++;\n            }\n        }\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(DATA_FILE, JSON.stringify(initialData, null, 2));\n        console.log(`✅ Archivo data.json creado con ${initialData.programs.length} programas`);\n    }\n}\n// Leer datos con caché de archivo\nasync function readData() {\n    const now = Date.now();\n    // Verificar caché del archivo\n    if (fileCache.data && now - fileCache.timestamp < FILE_CACHE_TTL) {\n        console.log('📁 Datos servidos desde caché de archivo');\n        return fileCache.data;\n    }\n    console.log('📁 Leyendo datos desde archivo');\n    await initDataFile();\n    const data = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(DATA_FILE, 'utf-8');\n    const parsed = JSON.parse(data);\n    // Actualizar caché\n    fileCache = {\n        data: parsed,\n        timestamp: now\n    };\n    return parsed;\n}\n// Escribir datos e invalidar cachés\nasync function writeData(data) {\n    await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(DATA_FILE, JSON.stringify(data, null, 2));\n    // Invalidar todos los cachés relacionados\n    fileCache = {\n        data: null,\n        timestamp: 0\n    };\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.flush();\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.flush();\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.flush();\n    console.log('💾 Datos guardados y cachés invalidados');\n}\n// Obtener todas las estaciones (con caché)\nasync function getStations() {\n    const cacheKey = 'all_stations';\n    // Intentar obtener del caché\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.get(cacheKey);\n    if (cached) {\n        console.log('🎯 Estaciones servidas desde caché');\n        return cached;\n    }\n    // Si no está en caché, leer y cachear\n    const data = await readData();\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.set(cacheKey, data.stations);\n    return data.stations;\n}\n// Obtener todos los programas (con caché)\nasync function getPrograms() {\n    const cacheKey = 'all_programs';\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.get(cacheKey);\n    if (cached) {\n        console.log('🎯 Programas servidos desde caché');\n        return cached;\n    }\n    const data = await readData();\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.set(cacheKey, data.programs);\n    return data.programs;\n}\n// Obtener programas por estación (con caché)\nasync function getProgramsByStation(stationId) {\n    const cacheKey = `programs_station_${stationId}`;\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.get(cacheKey);\n    if (cached) {\n        console.log(`🎯 Programas de estación ${stationId} servidos desde caché`);\n        return cached;\n    }\n    const data = await readData();\n    const programs = data.programs.filter((p)=>p.station_id === stationId);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.set(cacheKey, programs);\n    return programs;\n}\n// Obtener programa actual (con caché corto)\nasync function getCurrentProgram(stationId) {\n    // Verificar caché primero\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.get(stationId);\n    if (cached !== undefined) {\n        console.log(`🎯 Programa actual de ${stationId} servido desde caché`);\n        return cached;\n    }\n    const data = await readData();\n    // Obtener hora de Perú (UTC-5)\n    const now = new Date();\n    const utc = now.getTime() + now.getTimezoneOffset() * 60000;\n    const peruTime = new Date(utc + 3600000 * -5);\n    const currentHour = peruTime.getHours();\n    const currentMinute = peruTime.getMinutes();\n    const currentTimeMinutes = currentHour * 60 + currentMinute; // Minutos desde medianoche\n    const currentDay = [\n        'Domingo',\n        'Lunes',\n        'Martes',\n        'Miércoles',\n        'Jueves',\n        'Viernes',\n        'Sábado'\n    ][peruTime.getDay()];\n    const stationPrograms = data.programs.filter((p)=>p.station_id === stationId);\n    for (const program of stationPrograms){\n        if (!program.days.includes(currentDay)) continue;\n        // Convertir tiempos a minutos desde medianoche\n        const [startHour, startMin] = program.start_time.split(':').map(Number);\n        const [endHour, endMin] = program.end_time.split(':').map(Number);\n        const startMinutes = startHour * 60 + startMin;\n        let endMinutes = endHour * 60 + endMin;\n        // Si el programa termina a las 00:00, significa que termina a medianoche (1440 minutos)\n        if (endHour === 0 && endMin === 0 && startHour >= 12) {\n            endMinutes = 24 * 60; // 1440 minutos (medianoche)\n        }\n        // Caso 1: Programa normal (no cruza medianoche)\n        if (startMinutes < endMinutes) {\n            if (currentTimeMinutes >= startMinutes && currentTimeMinutes < endMinutes) {\n                _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n                console.log(`💾 Programa actual de ${stationId} cacheado`);\n                return program;\n            }\n        } else if (startMinutes > endMinutes) {\n            // Si estamos después del inicio O antes del fin\n            if (currentTimeMinutes >= startMinutes || currentTimeMinutes < endMinutes) {\n                _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n                console.log(`💾 Programa actual de ${stationId} cacheado`);\n                return program;\n            }\n        } else if (startMinutes === endMinutes) {\n            _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n            console.log(`💾 Programa actual de ${stationId} cacheado`);\n            return program; // Siempre activo\n        }\n    }\n    // Si no encontramos programa para el día actual, buscar el programa del día anterior que cruza medianoche\n    if (currentTimeMinutes < 360) {\n        const yesterdayIndex = peruTime.getDay() === 0 ? 6 : peruTime.getDay() - 1;\n        const yesterdayName = [\n            'Domingo',\n            'Lunes',\n            'Martes',\n            'Miércoles',\n            'Jueves',\n            'Viernes',\n            'Sábado'\n        ][yesterdayIndex];\n        for (const program of stationPrograms){\n            if (!program.days.includes(yesterdayName)) continue;\n            const [startHour, startMin] = program.start_time.split(':').map(Number);\n            const [endHour, endMin] = program.end_time.split(':').map(Number);\n            // Solo revisar programas que empiezan tarde (después de las 20:00)\n            if (startHour >= 20) {\n                const endMinutes = endHour * 60 + endMin;\n                // Si el programa del día anterior cruza a hoy\n                if (endHour < 12 && currentTimeMinutes < endMinutes) {\n                    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n                    console.log(`💾 Programa actual de ${stationId} cacheado`);\n                    return program;\n                }\n            }\n        }\n    }\n    // Cachear null también para evitar búsquedas repetidas\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, null);\n    console.log(`💾 Sin programa actual para ${stationId} - cacheado como null`);\n    return null;\n}\n// Crear programa\nasync function createProgram(program) {\n    const data = await readData();\n    const newProgram = {\n        ...program,\n        id: Date.now().toString()\n    };\n    data.programs.push(newProgram);\n    await writeData(data);\n    // Invalidar cachés específicos\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${program.station_id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(program.station_id);\n    return newProgram;\n}\n// Actualizar programa\nasync function updateProgram(id, updates) {\n    const data = await readData();\n    const index = data.programs.findIndex((p)=>p.id === id);\n    if (index === -1) throw new Error('Programa no encontrado');\n    const oldProgram = data.programs[index];\n    data.programs[index] = {\n        ...oldProgram,\n        ...updates\n    };\n    await writeData(data);\n    // Invalidar cachés específicos\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${oldProgram.station_id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(oldProgram.station_id);\n    // Si cambió la estación, invalidar también la nueva\n    if (updates.station_id && updates.station_id !== oldProgram.station_id) {\n        _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${updates.station_id}`);\n        _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(updates.station_id);\n    }\n    return data.programs[index];\n}\n// Eliminar programa\nasync function deleteProgram(id) {\n    const data = await readData();\n    const program = data.programs.find((p)=>p.id === id);\n    if (!program) throw new Error('Programa no encontrado');\n    data.programs = data.programs.filter((p)=>p.id !== id);\n    await writeData(data);\n    // Invalidar cachés específicos\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${program.station_id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(program.station_id);\n}\n// Crear estación\nasync function createStation(stationData) {\n    const data = await readData();\n    const newStation = {\n        id: Date.now().toString(),\n        name: stationData.name || '',\n        url: stationData.url || '',\n        image: stationData.image,\n        frequency: stationData.frequency,\n        city: stationData.city,\n        description: stationData.description\n    };\n    data.stations.push(newStation);\n    await writeData(data);\n    // Invalidar caché de estaciones\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.del('all_stations');\n    return newStation;\n}\n// Actualizar estación\nasync function updateStation(id, updates) {\n    const data = await readData();\n    const index = data.stations.findIndex((s)=>s.id === id);\n    if (index === -1) throw new Error('Estación no encontrada');\n    data.stations[index] = {\n        ...data.stations[index],\n        ...updates\n    };\n    await writeData(data);\n    // Invalidar caché de estaciones\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.del('all_stations');\n    return data.stations[index];\n}\n// Eliminar estación\nasync function deleteStation(id) {\n    const data = await readData();\n    // Eliminar la estación\n    data.stations = data.stations.filter((s)=>s.id !== id);\n    // Eliminar todos los programas de esa estación\n    data.programs = data.programs.filter((p)=>p.station_id !== id);\n    await writeData(data);\n    // Invalidar todos los cachés relacionados\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.del('all_stations');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(id);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QzVDLE1BQU1QLE9BQU8sTUFBTWtDO0lBQ25CLHVCQUF1QjtJQUN2QmxDLEtBQUtNLFFBQVEsR0FBR04sS0FBS00sUUFBUSxDQUFDNEMsTUFBTSxDQUFDMkMsQ0FBQUEsSUFBS0EsRUFBRXRGLEVBQUUsS0FBS0E7SUFDbkQsK0NBQStDO0lBQy9DUCxLQUFLYyxRQUFRLEdBQUdkLEtBQUtjLFFBQVEsQ0FBQ29DLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRXpCLFVBQVUsS0FBS25CO0lBQzNELE1BQU1pQyxVQUFVeEM7SUFFaEIsMENBQTBDO0lBQzFDUixzREFBa0JBLENBQUN3RixHQUFHLENBQUM7SUFDdkJ2RixzREFBa0JBLENBQUN1RixHQUFHLENBQUM7SUFDdkJ2RixzREFBa0JBLENBQUN1RixHQUFHLENBQUMsQ0FBQyxpQkFBaUIsRUFBRXpFLElBQUk7SUFDL0NiLDREQUF3QkEsQ0FBQ3NGLEdBQUcsQ0FBQ3pFO0FBQy9CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVTVUFSSU9cXERlc2t0b3BcXEFQUC1FWElUT1NBXFxhcHAtZXhpdG9zYS1wbGF5ZXJWNC1tYWluXFxzcmNcXGxpYlxcZGF0YU1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9kYXRhTWFuYWdlci50cyAtIFZFUlNJw5NOIENPTVBMRVRBIENPTiBDQUNIw4lcbmltcG9ydCBmcyBmcm9tICdmcy9wcm9taXNlcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IFxuICBzdGF0aW9uc0NhY2hlVXRpbHMsIFxuICBwcm9ncmFtc0NhY2hlVXRpbHMsIFxuICBjdXJyZW50UHJvZ3JhbUNhY2hlVXRpbHMgXG59IGZyb20gJy4vY2FjaGUnO1xuXG5jb25zdCBEQVRBX0ZJTEUgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2RhdGEuanNvbicpO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXRpb24ge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIHVybDogc3RyaW5nO1xuICBpbWFnZT86IHN0cmluZztcbiAgZnJlcXVlbmN5Pzogc3RyaW5nO1xuICBjaXR5Pzogc3RyaW5nO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9ncmFtIHtcbiAgaWQ6IHN0cmluZztcbiAgc3RhdGlvbl9pZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIGhvc3Q6IHN0cmluZztcbiAgc3RhcnRfdGltZTogc3RyaW5nO1xuICBlbmRfdGltZTogc3RyaW5nO1xuICBpbWFnZTogc3RyaW5nO1xuICBkYXlzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSYWRpb0RhdGEge1xuICBzdGF0aW9uczogU3RhdGlvbltdO1xuICBwcm9ncmFtczogUHJvZ3JhbVtdO1xufVxuXG4vLyBDYWNoZSBwYXJhIGVsIGFyY2hpdm8gY29tcGxldG8gKDUgbWludXRvcylcbmxldCBmaWxlQ2FjaGU6IHsgZGF0YTogUmFkaW9EYXRhIHwgbnVsbDsgdGltZXN0YW1wOiBudW1iZXIgfSA9IHtcbiAgZGF0YTogbnVsbCxcbiAgdGltZXN0YW1wOiAwXG59O1xuY29uc3QgRklMRV9DQUNIRV9UVEwgPSA1ICogNjAgKiAxMDAwOyAvLyA1IG1pbnV0b3NcblxuLy8gSW5pY2lhbGl6YXIgYXJjaGl2byBkZSBkYXRvcyBzaSBubyBleGlzdGVcbmFzeW5jIGZ1bmN0aW9uIGluaXREYXRhRmlsZSgpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBmcy5hY2Nlc3MoREFUQV9GSUxFKTtcbiAgfSBjYXRjaCB7XG4gICAgY29uc3QgaW5pdGlhbERhdGE6IFJhZGlvRGF0YSA9IHtcbiAgICAgIHN0YXRpb25zOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogXCJsaW1hXCIsXG4gICAgICAgICAgbmFtZTogXCJMaW1hXCIsXG4gICAgICAgICAgdXJsOiBcImh0dHBzOi8vcmFkaW9zLXBsYXllci1leGl0b3NhLm1lZGlhc2VydmVyLmRpZ2l0YWwvZXhpdG9zYS5jaGljbGF5b1wiLFxuICAgICAgICAgIGltYWdlOiBcIi9pbWFnZXMvc3RhdGlvbnMvMTc1MjI0NTYwNzM3OS1mOXNpM3AuanBnXCIsXG4gICAgICAgICAgZnJlcXVlbmN5OiBcIjk1LjUgRk1cIixcbiAgICAgICAgICBjaXR5OiBcIkxpbWEsIFBlcsO6XCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiTGEgZXN0YWNpw7NuIHByaW5jaXBhbCBkZSBSYWRpbyBFeGl0b3NhIGVuIGxhIGNhcGl0YWwgZGVsIFBlcsO6XCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGlkOiBcImFyZXF1aXBhXCIsXG4gICAgICAgICAgbmFtZTogXCJBcmVxdWlwYVwiLFxuICAgICAgICAgIHVybDogXCJodHRwczovL25lcHR1bm8tMy1hdWRpby5tZWRpYXNlcnZlci5kaWdpdGFsL2VfYXJlcXVpcGFcIixcbiAgICAgICAgICBpbWFnZTogXCIvaW1hZ2VzL3N0YXRpb25zLzE3NTIyNDU2MTk1ODQtZzRmZmouanBnXCIsXG4gICAgICAgICAgZnJlcXVlbmN5OiBcIjEwNC45IEZNXCIsXG4gICAgICAgICAgY2l0eTogXCJBcmVxdWlwYSwgUGVyw7pcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUcmFuc21pdGllbmRvIGRlc2RlIGxhIENpdWRhZCBCbGFuY2FcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6IFwidHJ1amlsbG9cIixcbiAgICAgICAgICBuYW1lOiBcIlRydWppbGxvXCIsXG4gICAgICAgICAgdXJsOiBcImh0dHBzOi8vcmFkaW9zLXBsYXllci1leGl0b3NhLm1lZGlhc2VydmVyLmRpZ2l0YWwvZXhpdG9zYS50cnVqaWxsb1wiLFxuICAgICAgICAgIGltYWdlOiBcIi9pbWFnZXMvc3RhdGlvbnMvMTc1MjI0NTYyNzg2Ni1hMmd0MjUuanBnXCIsXG4gICAgICAgICAgZnJlcXVlbmN5OiBcIjEwMy4zIEZNXCIsXG4gICAgICAgICAgY2l0eTogXCJUcnVqaWxsbywgUGVyw7pcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJMYSB2b3ogZGUgbGEgQ2l1ZGFkIGRlIGxhIEV0ZXJuYSBQcmltYXZlcmFcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6IFwiY2hpY2xheW9cIixcbiAgICAgICAgICBuYW1lOiBcIkNoaWNsYXlvXCIsXG4gICAgICAgICAgdXJsOiBcImh0dHBzOi8vcmFkaW9zLXBsYXllci1leGl0b3NhLm1lZGlhc2VydmVyLmRpZ2l0YWwvZXhpdG9zYS5jaGljbGF5b1wiLFxuICAgICAgICAgIGltYWdlOiBcIi9pbWFnZXMvc3RhdGlvbnMvMTc1MjI0NTYzNDM0Mi10b3cwNjMuanBnXCIsXG4gICAgICAgICAgZnJlcXVlbmN5OiBcIjk4LjkgRk1cIixcbiAgICAgICAgICBjaXR5OiBcIkNoaWNsYXlvLCBQZXLDulwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkNvbmVjdGFuZG8gY29uIGVsIG5vcnRlIGRlbCBQZXLDulwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBwcm9ncmFtczogW11cbiAgICB9O1xuICAgIFxuICAgIC8vIEFncmVnYXIgdG9kb3MgbG9zIHByb2dyYW1hcyBwYXJhIGNhZGEgZXN0YWNpw7NuXG4gICAgY29uc3Qgd2Vla2RheVByb2dyYW1zID0gW1xuICAgICAgeyBuYW1lOiBcIkxhIEhvcmEgRXNvdMOpcmljYVwiLCBob3N0OiBcIlNvcmFsbGEgRGUgTG9zIEFuZ2VsZXNcIiwgc3RhcnRfdGltZTogXCIwMDowMFwiLCBlbmRfdGltZTogXCIwMTowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiVXN0ZWQgVGllbmUgRGVyZWNob1wiLCBob3N0OiBcIk1hcmlvIENhbWFjaG8gUGVybGFcIiwgc3RhcnRfdGltZTogXCIwMTowMFwiLCBlbmRfdGltZTogXCIwMjowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiTGEgVm96IERlIExvcyBQdWVibG9zXCIsIGhvc3Q6IFwiSmFjayBNaXJhbmRhIHkgTWFyY2lhbCBEZSBMYSBDcnV6XCIsIHN0YXJ0X3RpbWU6IFwiMDI6MDBcIiwgZW5kX3RpbWU6IFwiMDU6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkV4aXRvc2EgUGVyw7pcIiwgaG9zdDogXCJQZWRybyBQYXJlZGVzXCIsIHN0YXJ0X3RpbWU6IFwiMDU6MDBcIiwgZW5kX3RpbWU6IFwiMDg6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkhhYmxlbW9zIENsYXJvXCIsIGhvc3Q6IFwiTmljb2zDoXMgTMO6Y2FyXCIsIHN0YXJ0X3RpbWU6IFwiMDg6MDBcIiwgZW5kX3RpbWU6IFwiMTE6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkV4aXRvc2EgVGUgRXNjdWNoYVwiLCBob3N0OiBcIkthdHl1c2NhIFRvcnJlcyBBeWJhclwiLCBzdGFydF90aW1lOiBcIjExOjAwXCIsIGVuZF90aW1lOiBcIjE0OjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJFeGl0b3NhIERlcG9ydGVzXCIsIGhvc3Q6IFwiR29uemFsbyBOw7rDsWV6LCDDk3NjYXIgUGF6IHkgSmVhbiBSb2Ryw61ndWV6XCIsIHN0YXJ0X3RpbWU6IFwiMTQ6MDBcIiwgZW5kX3RpbWU6IFwiMTY6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkNvbnRyYSBFbCBUcsOhZmljb1wiLCBob3N0OiBcIlJpY2FyZG8gUm9uZMOzblwiLCBzdGFydF90aW1lOiBcIjE2OjAwXCIsIGVuZF90aW1lOiBcIjE4OjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJNw6lkaWNvcyBFbiBBY2Npw7NuXCIsIGhvc3Q6IFwiQXJtYW5kbyBNYXNzw6lcIiwgc3RhcnRfdGltZTogXCIxODowMFwiLCBlbmRfdGltZTogXCIxOTowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiSW5mb3JtYW1vcyB5IE9waW5hbW9zXCIsIGhvc3Q6IFwiS2FyaW5hIE5vdm9hXCIsIHN0YXJ0X3RpbWU6IFwiMTk6MDBcIiwgZW5kX3RpbWU6IFwiMjI6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkV4aXRvc2EgTm90aWNpYXNcIiwgaG9zdDogXCJKdXJpa28gTm92b2FcIiwgc3RhcnRfdGltZTogXCIyMjowMFwiLCBlbmRfdGltZTogXCIyMzowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRGVzcGllcnRhIFR1cyBFbW9jaW9uZXNcIiwgaG9zdDogXCJKb3PDqSBQb2ljw7NuXCIsIHN0YXJ0X3RpbWU6IFwiMjM6MDBcIiwgZW5kX3RpbWU6IFwiMDA6MDBcIiB9XG4gICAgXTtcblxuICAgIGNvbnN0IHNhdHVyZGF5UHJvZ3JhbXMgPSBbXG4gICAgICB7IG5hbWU6IFwiTGEgSG9yYSBFc290w6lyaWNhXCIsIGhvc3Q6IFwiRXNvdMOpcmljb3NcIiwgc3RhcnRfdGltZTogXCIwMDowMFwiLCBlbmRfdGltZTogXCIwMTowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRWR1Y2FuZG8gTWlzIEVtb2Npb25lc1wiLCBob3N0OiBcIkRyYS4gRGFuaWxhIFZpbGxlZ2FzXCIsIHN0YXJ0X3RpbWU6IFwiMDE6MDBcIiwgZW5kX3RpbWU6IFwiMDI6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkxhIFZveiBEZSBMb3MgUHVlYmxvc1wiLCBob3N0OiBcIkphY2sgTWlyYW5kYVwiLCBzdGFydF90aW1lOiBcIjAyOjAwXCIsIGVuZF90aW1lOiBcIjA1OjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJFeGl0b3NhIFBlcsO6XCIsIGhvc3Q6IFwiUGVkcm8gUGFyZWRlc1wiLCBzdGFydF90aW1lOiBcIjA1OjAwXCIsIGVuZF90aW1lOiBcIjA4OjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJIYWJsZW1vcyBDbGFyb1wiLCBob3N0OiBcIkplc8O6cyBWZXJkZVwiLCBzdGFydF90aW1lOiBcIjA4OjAwXCIsIGVuZF90aW1lOiBcIjExOjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJDb25zdHJ1eWVuZG8gQ2ltaWVudG9zIFBhcmEgRWwgRnV0dXJvXCIsIGhvc3Q6IFwiSm9zZSBDaWV6YVwiLCBzdGFydF90aW1lOiBcIjExOjAwXCIsIGVuZF90aW1lOiBcIjEyOjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJEZXJyYW1hIE1hZ2lzdGVyaWFsXCIsIGhvc3Q6IFwiQ2FybG9zIENvcm5lam9cIiwgc3RhcnRfdGltZTogXCIxMjowMFwiLCBlbmRfdGltZTogXCIxMzowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBEZXBvcnRlc1wiLCBob3N0OiBcIsOTc2NhciBQYXpcIiwgc3RhcnRfdGltZTogXCIxMzowMFwiLCBlbmRfdGltZTogXCIxNTowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBTw6FiYWRvXCIsIGhvc3Q6IFwiS2F0eXVzY2EgVG9ycmVzIEF5YmFyXCIsIHN0YXJ0X3RpbWU6IFwiMTU6MDBcIiwgZW5kX3RpbWU6IFwiMTg6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkxhIEhvcmEgRGVsIFZvbGFudGVcIiwgaG9zdDogXCJUaXRvIEFsdml0ZXNcIiwgc3RhcnRfdGltZTogXCIxODowMFwiLCBlbmRfdGltZTogXCIyMDowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBUZSBFc2N1Y2hhXCIsIGhvc3Q6IFwiSm9yZ2UgVmFsZGV6XCIsIHN0YXJ0X3RpbWU6IFwiMjA6MDBcIiwgZW5kX3RpbWU6IFwiMjI6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIk5vY2hlIEVzb3TDqXJpY2FcIiwgaG9zdDogXCJWaWRlbnRlIEhheWlteVwiLCBzdGFydF90aW1lOiBcIjIyOjAwXCIsIGVuZF90aW1lOiBcIjAwOjAwXCIgfVxuICAgIF07XG5cbiAgICBjb25zdCBzdW5kYXlQcm9ncmFtcyA9IFtcbiAgICAgIHsgbmFtZTogXCJOb2NoZSBFc290w6lyaWNhXCIsIGhvc3Q6IFwiVmlkZW50ZSBIYXlpbXlcIiwgc3RhcnRfdGltZTogXCIwMDowMFwiLCBlbmRfdGltZTogXCIwMTowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiTGEgVm96IGRlIGxvcyBQdWVibG9zXCIsIGhvc3Q6IFwiSGllcmJlcm9cIiwgc3RhcnRfdGltZTogXCIwMTowMFwiLCBlbmRfdGltZTogXCIwMjowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiTGEgVm96IGRlIGxvcyBQdWVibG9zXCIsIGhvc3Q6IFwiTWFyY2lhbCBkZSBsYSBDcnV6XCIsIHN0YXJ0X3RpbWU6IFwiMDI6MDBcIiwgZW5kX3RpbWU6IFwiMDY6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkV4aXRvc2EgUGVyw7pcIiwgaG9zdDogXCJQaXVyYVwiLCBzdGFydF90aW1lOiBcIjA2OjAwXCIsIGVuZF90aW1lOiBcIjA3OjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJFeGl0b3NhIFBlcsO6XCIsIGhvc3Q6IFwiQ3VzY29cIiwgc3RhcnRfdGltZTogXCIwNzowMFwiLCBlbmRfdGltZTogXCIwODowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBQZXLDulwiLCBob3N0OiBcIkFyZXF1aXBhXCIsIHN0YXJ0X3RpbWU6IFwiMDg6MDBcIiwgZW5kX3RpbWU6IFwiMDk6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkV4aXRvc2EgUGVyw7pcIiwgaG9zdDogXCJUcnVqaWxsb1wiLCBzdGFydF90aW1lOiBcIjA5OjAwXCIsIGVuZF90aW1lOiBcIjEwOjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJFbiBEZWZlbnNhIGRlIGxhIFZlcmRhZFwiLCBob3N0OiBcIkNlY2lsaWEgR2FyY8OtYVwiLCBzdGFydF90aW1lOiBcIjEwOjAwXCIsIGVuZF90aW1lOiBcIjEyOjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJFeGl0b3NhIFBlcsO6XCIsIGhvc3Q6IFwiQ2hpY2xheW9cIiwgc3RhcnRfdGltZTogXCIxMjowMFwiLCBlbmRfdGltZTogXCIxMzowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBQZXLDulwiLCBob3N0OiBcIkh1YW5jYXlvXCIsIHN0YXJ0X3RpbWU6IFwiMTM6MDBcIiwgZW5kX3RpbWU6IFwiMTQ6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIkV4aXRvc2EgUGVyw7pcIiwgaG9zdDogXCJIdWFjaG9cIiwgc3RhcnRfdGltZTogXCIxNDowMFwiLCBlbmRfdGltZTogXCIxNTowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBQZXLDulwiLCBob3N0OiBcIkljYVwiLCBzdGFydF90aW1lOiBcIjE1OjAwXCIsIGVuZF90aW1lOiBcIjE2OjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJFeGl0b3NhIFBlcsO6XCIsIGhvc3Q6IFwiSXF1aXRvc1wiLCBzdGFydF90aW1lOiBcIjE2OjAwXCIsIGVuZF90aW1lOiBcIjE3OjAwXCIgfSxcbiAgICAgIHsgbmFtZTogXCJFeGl0b3NhIFBlcsO6XCIsIGhvc3Q6IFwiVGFjbmFcIiwgc3RhcnRfdGltZTogXCIxNzowMFwiLCBlbmRfdGltZTogXCIxODowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBQZXLDulwiLCBob3N0OiBcIlRhcmFwb3RvXCIsIHN0YXJ0X3RpbWU6IFwiMTg6MDBcIiwgZW5kX3RpbWU6IFwiMTk6MDBcIiB9LFxuICAgICAgeyBuYW1lOiBcIk3DqWRpY29zIGVuIEFjY2nDs25cIiwgaG9zdDogXCJEYW5pZWwgQnVlbm9cIiwgc3RhcnRfdGltZTogXCIxOTowMFwiLCBlbmRfdGltZTogXCIyMTowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiRXhpdG9zYSBEZXBvcnRlc1wiLCBob3N0OiBcIsOTc2NhciBQYXpcIiwgc3RhcnRfdGltZTogXCIyMTowMFwiLCBlbmRfdGltZTogXCIyMjowMFwiIH0sXG4gICAgICB7IG5hbWU6IFwiTm9jaGUgRXNvdMOpcmljYVwiLCBob3N0OiBcIlZpZGVudGUgSGF5aW15XCIsIHN0YXJ0X3RpbWU6IFwiMjI6MDBcIiwgZW5kX3RpbWU6IFwiMDA6MDBcIiB9XG4gICAgXTtcbiAgICBcbiAgICBsZXQgcHJvZ3JhbUlkID0gMTtcbiAgICBcbiAgICAvLyBQYXJhIGNhZGEgZXN0YWNpw7NuLCBhZ3JlZ2FyIHRvZG9zIGxvcyBwcm9ncmFtYXNcbiAgICBmb3IgKGNvbnN0IHN0YXRpb24gb2YgaW5pdGlhbERhdGEuc3RhdGlvbnMpIHtcbiAgICAgIC8vIFByb2dyYW1hcyBkZSBMdW5lcyBhIFZpZXJuZXNcbiAgICAgIGZvciAoY29uc3QgcHJvZ3JhbSBvZiB3ZWVrZGF5UHJvZ3JhbXMpIHtcbiAgICAgICAgaW5pdGlhbERhdGEucHJvZ3JhbXMucHVzaCh7XG4gICAgICAgICAgaWQ6IHByb2dyYW1JZC50b1N0cmluZygpLFxuICAgICAgICAgIHN0YXRpb25faWQ6IHN0YXRpb24uaWQsXG4gICAgICAgICAgbmFtZTogcHJvZ3JhbS5uYW1lLFxuICAgICAgICAgIGhvc3Q6IHByb2dyYW0uaG9zdCxcbiAgICAgICAgICBzdGFydF90aW1lOiBwcm9ncmFtLnN0YXJ0X3RpbWUsXG4gICAgICAgICAgZW5kX3RpbWU6IHByb2dyYW0uZW5kX3RpbWUsXG4gICAgICAgICAgaW1hZ2U6ICcnLFxuICAgICAgICAgIGRheXM6IFsnTHVuZXMnLCAnTWFydGVzJywgJ01pw6lyY29sZXMnLCAnSnVldmVzJywgJ1ZpZXJuZXMnXVxuICAgICAgICB9KTtcbiAgICAgICAgcHJvZ3JhbUlkKys7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFByb2dyYW1hcyBkZSBTw6FiYWRvXG4gICAgICBmb3IgKGNvbnN0IHByb2dyYW0gb2Ygc2F0dXJkYXlQcm9ncmFtcykge1xuICAgICAgICBpbml0aWFsRGF0YS5wcm9ncmFtcy5wdXNoKHtcbiAgICAgICAgICBpZDogcHJvZ3JhbUlkLnRvU3RyaW5nKCksXG4gICAgICAgICAgc3RhdGlvbl9pZDogc3RhdGlvbi5pZCxcbiAgICAgICAgICBuYW1lOiBwcm9ncmFtLm5hbWUsXG4gICAgICAgICAgaG9zdDogcHJvZ3JhbS5ob3N0LFxuICAgICAgICAgIHN0YXJ0X3RpbWU6IHByb2dyYW0uc3RhcnRfdGltZSxcbiAgICAgICAgICBlbmRfdGltZTogcHJvZ3JhbS5lbmRfdGltZSxcbiAgICAgICAgICBpbWFnZTogJycsXG4gICAgICAgICAgZGF5czogWydTw6FiYWRvJ11cbiAgICAgICAgfSk7XG4gICAgICAgIHByb2dyYW1JZCsrO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBQcm9ncmFtYXMgZGUgRG9taW5nb1xuICAgICAgZm9yIChjb25zdCBwcm9ncmFtIG9mIHN1bmRheVByb2dyYW1zKSB7XG4gICAgICAgIGluaXRpYWxEYXRhLnByb2dyYW1zLnB1c2goe1xuICAgICAgICAgIGlkOiBwcm9ncmFtSWQudG9TdHJpbmcoKSxcbiAgICAgICAgICBzdGF0aW9uX2lkOiBzdGF0aW9uLmlkLFxuICAgICAgICAgIG5hbWU6IHByb2dyYW0ubmFtZSxcbiAgICAgICAgICBob3N0OiBwcm9ncmFtLmhvc3QsXG4gICAgICAgICAgc3RhcnRfdGltZTogcHJvZ3JhbS5zdGFydF90aW1lLFxuICAgICAgICAgIGVuZF90aW1lOiBwcm9ncmFtLmVuZF90aW1lLFxuICAgICAgICAgIGltYWdlOiAnJyxcbiAgICAgICAgICBkYXlzOiBbJ0RvbWluZ28nXVxuICAgICAgICB9KTtcbiAgICAgICAgcHJvZ3JhbUlkKys7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGF3YWl0IGZzLndyaXRlRmlsZShEQVRBX0ZJTEUsIEpTT04uc3RyaW5naWZ5KGluaXRpYWxEYXRhLCBudWxsLCAyKSk7XG4gICAgY29uc29sZS5sb2coYOKchSBBcmNoaXZvIGRhdGEuanNvbiBjcmVhZG8gY29uICR7aW5pdGlhbERhdGEucHJvZ3JhbXMubGVuZ3RofSBwcm9ncmFtYXNgKTtcbiAgfVxufVxuXG4vLyBMZWVyIGRhdG9zIGNvbiBjYWNow6kgZGUgYXJjaGl2b1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlYWREYXRhKCk6IFByb21pc2U8UmFkaW9EYXRhPiB7XG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gIFxuICAvLyBWZXJpZmljYXIgY2FjaMOpIGRlbCBhcmNoaXZvXG4gIGlmIChmaWxlQ2FjaGUuZGF0YSAmJiAobm93IC0gZmlsZUNhY2hlLnRpbWVzdGFtcCkgPCBGSUxFX0NBQ0hFX1RUTCkge1xuICAgIGNvbnNvbGUubG9nKCfwn5OBIERhdG9zIHNlcnZpZG9zIGRlc2RlIGNhY2jDqSBkZSBhcmNoaXZvJyk7XG4gICAgcmV0dXJuIGZpbGVDYWNoZS5kYXRhO1xuICB9XG4gIFxuICBjb25zb2xlLmxvZygn8J+TgSBMZXllbmRvIGRhdG9zIGRlc2RlIGFyY2hpdm8nKTtcbiAgYXdhaXQgaW5pdERhdGFGaWxlKCk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBmcy5yZWFkRmlsZShEQVRBX0ZJTEUsICd1dGYtOCcpO1xuICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKGRhdGEpO1xuICBcbiAgLy8gQWN0dWFsaXphciBjYWNow6lcbiAgZmlsZUNhY2hlID0ge1xuICAgIGRhdGE6IHBhcnNlZCxcbiAgICB0aW1lc3RhbXA6IG5vd1xuICB9O1xuICBcbiAgcmV0dXJuIHBhcnNlZDtcbn1cblxuLy8gRXNjcmliaXIgZGF0b3MgZSBpbnZhbGlkYXIgY2FjaMOpc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdyaXRlRGF0YShkYXRhOiBSYWRpb0RhdGEpOiBQcm9taXNlPHZvaWQ+IHtcbiAgYXdhaXQgZnMud3JpdGVGaWxlKERBVEFfRklMRSwgSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMikpO1xuICBcbiAgLy8gSW52YWxpZGFyIHRvZG9zIGxvcyBjYWNow6lzIHJlbGFjaW9uYWRvc1xuICBmaWxlQ2FjaGUgPSB7IGRhdGE6IG51bGwsIHRpbWVzdGFtcDogMCB9O1xuICBzdGF0aW9uc0NhY2hlVXRpbHMuZmx1c2goKTtcbiAgcHJvZ3JhbXNDYWNoZVV0aWxzLmZsdXNoKCk7XG4gIGN1cnJlbnRQcm9ncmFtQ2FjaGVVdGlscy5mbHVzaCgpO1xuICBcbiAgY29uc29sZS5sb2coJ/Cfkr4gRGF0b3MgZ3VhcmRhZG9zIHkgY2FjaMOpcyBpbnZhbGlkYWRvcycpO1xufVxuXG4vLyBPYnRlbmVyIHRvZGFzIGxhcyBlc3RhY2lvbmVzIChjb24gY2FjaMOpKVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0YXRpb25zKCk6IFByb21pc2U8U3RhdGlvbltdPiB7XG4gIGNvbnN0IGNhY2hlS2V5ID0gJ2FsbF9zdGF0aW9ucyc7XG4gIFxuICAvLyBJbnRlbnRhciBvYnRlbmVyIGRlbCBjYWNow6lcbiAgY29uc3QgY2FjaGVkID0gc3RhdGlvbnNDYWNoZVV0aWxzLmdldChjYWNoZUtleSk7XG4gIGlmIChjYWNoZWQpIHtcbiAgICBjb25zb2xlLmxvZygn8J+OryBFc3RhY2lvbmVzIHNlcnZpZGFzIGRlc2RlIGNhY2jDqScpO1xuICAgIHJldHVybiBjYWNoZWQ7XG4gIH1cbiAgXG4gIC8vIFNpIG5vIGVzdMOhIGVuIGNhY2jDqSwgbGVlciB5IGNhY2hlYXJcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWREYXRhKCk7XG4gIHN0YXRpb25zQ2FjaGVVdGlscy5zZXQoY2FjaGVLZXksIGRhdGEuc3RhdGlvbnMpO1xuICByZXR1cm4gZGF0YS5zdGF0aW9ucztcbn1cblxuLy8gT2J0ZW5lciB0b2RvcyBsb3MgcHJvZ3JhbWFzIChjb24gY2FjaMOpKVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2dyYW1zKCk6IFByb21pc2U8UHJvZ3JhbVtdPiB7XG4gIGNvbnN0IGNhY2hlS2V5ID0gJ2FsbF9wcm9ncmFtcyc7XG4gIFxuICBjb25zdCBjYWNoZWQgPSBwcm9ncmFtc0NhY2hlVXRpbHMuZ2V0KGNhY2hlS2V5KTtcbiAgaWYgKGNhY2hlZCkge1xuICAgIGNvbnNvbGUubG9nKCfwn46vIFByb2dyYW1hcyBzZXJ2aWRvcyBkZXNkZSBjYWNow6knKTtcbiAgICByZXR1cm4gY2FjaGVkO1xuICB9XG4gIFxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVhZERhdGEoKTtcbiAgcHJvZ3JhbXNDYWNoZVV0aWxzLnNldChjYWNoZUtleSwgZGF0YS5wcm9ncmFtcyk7XG4gIHJldHVybiBkYXRhLnByb2dyYW1zO1xufVxuXG4vLyBPYnRlbmVyIHByb2dyYW1hcyBwb3IgZXN0YWNpw7NuIChjb24gY2FjaMOpKVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2dyYW1zQnlTdGF0aW9uKHN0YXRpb25JZDogc3RyaW5nKTogUHJvbWlzZTxQcm9ncmFtW10+IHtcbiAgY29uc3QgY2FjaGVLZXkgPSBgcHJvZ3JhbXNfc3RhdGlvbl8ke3N0YXRpb25JZH1gO1xuICBcbiAgY29uc3QgY2FjaGVkID0gcHJvZ3JhbXNDYWNoZVV0aWxzLmdldChjYWNoZUtleSk7XG4gIGlmIChjYWNoZWQpIHtcbiAgICBjb25zb2xlLmxvZyhg8J+OryBQcm9ncmFtYXMgZGUgZXN0YWNpw7NuICR7c3RhdGlvbklkfSBzZXJ2aWRvcyBkZXNkZSBjYWNow6lgKTtcbiAgICByZXR1cm4gY2FjaGVkO1xuICB9XG4gIFxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVhZERhdGEoKTtcbiAgY29uc3QgcHJvZ3JhbXMgPSBkYXRhLnByb2dyYW1zLmZpbHRlcihwID0+IHAuc3RhdGlvbl9pZCA9PT0gc3RhdGlvbklkKTtcbiAgcHJvZ3JhbXNDYWNoZVV0aWxzLnNldChjYWNoZUtleSwgcHJvZ3JhbXMpO1xuICByZXR1cm4gcHJvZ3JhbXM7XG59XG5cbi8vIE9idGVuZXIgcHJvZ3JhbWEgYWN0dWFsIChjb24gY2FjaMOpIGNvcnRvKVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEN1cnJlbnRQcm9ncmFtKHN0YXRpb25JZDogc3RyaW5nKTogUHJvbWlzZTxQcm9ncmFtIHwgbnVsbD4ge1xuICAvLyBWZXJpZmljYXIgY2FjaMOpIHByaW1lcm9cbiAgY29uc3QgY2FjaGVkID0gY3VycmVudFByb2dyYW1DYWNoZVV0aWxzLmdldChzdGF0aW9uSWQpO1xuICBpZiAoY2FjaGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLmxvZyhg8J+OryBQcm9ncmFtYSBhY3R1YWwgZGUgJHtzdGF0aW9uSWR9IHNlcnZpZG8gZGVzZGUgY2FjaMOpYCk7XG4gICAgcmV0dXJuIGNhY2hlZDtcbiAgfVxuICBcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWREYXRhKCk7XG4gIFxuICAvLyBPYnRlbmVyIGhvcmEgZGUgUGVyw7ogKFVUQy01KVxuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCB1dGMgPSBub3cuZ2V0VGltZSgpICsgKG5vdy5nZXRUaW1lem9uZU9mZnNldCgpICogNjAwMDApO1xuICBjb25zdCBwZXJ1VGltZSA9IG5ldyBEYXRlKHV0YyArICgzNjAwMDAwICogLTUpKTtcbiAgXG4gIGNvbnN0IGN1cnJlbnRIb3VyID0gcGVydVRpbWUuZ2V0SG91cnMoKTtcbiAgY29uc3QgY3VycmVudE1pbnV0ZSA9IHBlcnVUaW1lLmdldE1pbnV0ZXMoKTtcbiAgY29uc3QgY3VycmVudFRpbWVNaW51dGVzID0gY3VycmVudEhvdXIgKiA2MCArIGN1cnJlbnRNaW51dGU7IC8vIE1pbnV0b3MgZGVzZGUgbWVkaWFub2NoZVxuICBjb25zdCBjdXJyZW50RGF5ID0gWydEb21pbmdvJywgJ0x1bmVzJywgJ01hcnRlcycsICdNacOpcmNvbGVzJywgJ0p1ZXZlcycsICdWaWVybmVzJywgJ1PDoWJhZG8nXVtwZXJ1VGltZS5nZXREYXkoKV07XG4gIFxuICBjb25zdCBzdGF0aW9uUHJvZ3JhbXMgPSBkYXRhLnByb2dyYW1zLmZpbHRlcihwID0+IHAuc3RhdGlvbl9pZCA9PT0gc3RhdGlvbklkKTtcbiAgXG4gIGZvciAoY29uc3QgcHJvZ3JhbSBvZiBzdGF0aW9uUHJvZ3JhbXMpIHtcbiAgICBpZiAoIXByb2dyYW0uZGF5cy5pbmNsdWRlcyhjdXJyZW50RGF5KSkgY29udGludWU7XG4gICAgXG4gICAgLy8gQ29udmVydGlyIHRpZW1wb3MgYSBtaW51dG9zIGRlc2RlIG1lZGlhbm9jaGVcbiAgICBjb25zdCBbc3RhcnRIb3VyLCBzdGFydE1pbl0gPSBwcm9ncmFtLnN0YXJ0X3RpbWUuc3BsaXQoJzonKS5tYXAoTnVtYmVyKTtcbiAgICBjb25zdCBbZW5kSG91ciwgZW5kTWluXSA9IHByb2dyYW0uZW5kX3RpbWUuc3BsaXQoJzonKS5tYXAoTnVtYmVyKTtcbiAgICBcbiAgICBjb25zdCBzdGFydE1pbnV0ZXMgPSBzdGFydEhvdXIgKiA2MCArIHN0YXJ0TWluO1xuICAgIGxldCBlbmRNaW51dGVzID0gZW5kSG91ciAqIDYwICsgZW5kTWluO1xuICAgIFxuICAgIC8vIFNpIGVsIHByb2dyYW1hIHRlcm1pbmEgYSBsYXMgMDA6MDAsIHNpZ25pZmljYSBxdWUgdGVybWluYSBhIG1lZGlhbm9jaGUgKDE0NDAgbWludXRvcylcbiAgICBpZiAoZW5kSG91ciA9PT0gMCAmJiBlbmRNaW4gPT09IDAgJiYgc3RhcnRIb3VyID49IDEyKSB7XG4gICAgICBlbmRNaW51dGVzID0gMjQgKiA2MDsgLy8gMTQ0MCBtaW51dG9zIChtZWRpYW5vY2hlKVxuICAgIH1cbiAgICBcbiAgICAvLyBDYXNvIDE6IFByb2dyYW1hIG5vcm1hbCAobm8gY3J1emEgbWVkaWFub2NoZSlcbiAgICBpZiAoc3RhcnRNaW51dGVzIDwgZW5kTWludXRlcykge1xuICAgICAgaWYgKGN1cnJlbnRUaW1lTWludXRlcyA+PSBzdGFydE1pbnV0ZXMgJiYgY3VycmVudFRpbWVNaW51dGVzIDwgZW5kTWludXRlcykge1xuICAgICAgICBjdXJyZW50UHJvZ3JhbUNhY2hlVXRpbHMuc2V0KHN0YXRpb25JZCwgcHJvZ3JhbSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5K+IFByb2dyYW1hIGFjdHVhbCBkZSAke3N0YXRpb25JZH0gY2FjaGVhZG9gKTtcbiAgICAgICAgcmV0dXJuIHByb2dyYW07XG4gICAgICB9XG4gICAgfVxuICAgIC8vIENhc28gMjogUHJvZ3JhbWEgcXVlIGNydXphIGxhIG1lZGlhbm9jaGUgKGVqOiAyMjowMCAtIDAyOjAwKVxuICAgIGVsc2UgaWYgKHN0YXJ0TWludXRlcyA+IGVuZE1pbnV0ZXMpIHtcbiAgICAgIC8vIFNpIGVzdGFtb3MgZGVzcHXDqXMgZGVsIGluaWNpbyBPIGFudGVzIGRlbCBmaW5cbiAgICAgIGlmIChjdXJyZW50VGltZU1pbnV0ZXMgPj0gc3RhcnRNaW51dGVzIHx8IGN1cnJlbnRUaW1lTWludXRlcyA8IGVuZE1pbnV0ZXMpIHtcbiAgICAgICAgY3VycmVudFByb2dyYW1DYWNoZVV0aWxzLnNldChzdGF0aW9uSWQsIHByb2dyYW0pO1xuICAgICAgICBjb25zb2xlLmxvZyhg8J+SviBQcm9ncmFtYSBhY3R1YWwgZGUgJHtzdGF0aW9uSWR9IGNhY2hlYWRvYCk7XG4gICAgICAgIHJldHVybiBwcm9ncmFtO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBDYXNvIDM6IFByb2dyYW1hIGRlIDI0IGhvcmFzIChzdGFydCA9IGVuZClcbiAgICBlbHNlIGlmIChzdGFydE1pbnV0ZXMgPT09IGVuZE1pbnV0ZXMpIHtcbiAgICAgIGN1cnJlbnRQcm9ncmFtQ2FjaGVVdGlscy5zZXQoc3RhdGlvbklkLCBwcm9ncmFtKTtcbiAgICAgIGNvbnNvbGUubG9nKGDwn5K+IFByb2dyYW1hIGFjdHVhbCBkZSAke3N0YXRpb25JZH0gY2FjaGVhZG9gKTtcbiAgICAgIHJldHVybiBwcm9ncmFtOyAvLyBTaWVtcHJlIGFjdGl2b1xuICAgIH1cbiAgfVxuICBcbiAgLy8gU2kgbm8gZW5jb250cmFtb3MgcHJvZ3JhbWEgcGFyYSBlbCBkw61hIGFjdHVhbCwgYnVzY2FyIGVsIHByb2dyYW1hIGRlbCBkw61hIGFudGVyaW9yIHF1ZSBjcnV6YSBtZWRpYW5vY2hlXG4gIGlmIChjdXJyZW50VGltZU1pbnV0ZXMgPCAzNjApIHsgLy8gU2kgZXMgYW50ZXMgZGUgbGFzIDYgQU1cbiAgICBjb25zdCB5ZXN0ZXJkYXlJbmRleCA9IHBlcnVUaW1lLmdldERheSgpID09PSAwID8gNiA6IHBlcnVUaW1lLmdldERheSgpIC0gMTtcbiAgICBjb25zdCB5ZXN0ZXJkYXlOYW1lID0gWydEb21pbmdvJywgJ0x1bmVzJywgJ01hcnRlcycsICdNacOpcmNvbGVzJywgJ0p1ZXZlcycsICdWaWVybmVzJywgJ1PDoWJhZG8nXVt5ZXN0ZXJkYXlJbmRleF07XG4gICAgXG4gICAgZm9yIChjb25zdCBwcm9ncmFtIG9mIHN0YXRpb25Qcm9ncmFtcykge1xuICAgICAgaWYgKCFwcm9ncmFtLmRheXMuaW5jbHVkZXMoeWVzdGVyZGF5TmFtZSkpIGNvbnRpbnVlO1xuICAgICAgXG4gICAgICBjb25zdCBbc3RhcnRIb3VyLCBzdGFydE1pbl0gPSBwcm9ncmFtLnN0YXJ0X3RpbWUuc3BsaXQoJzonKS5tYXAoTnVtYmVyKTtcbiAgICAgIGNvbnN0IFtlbmRIb3VyLCBlbmRNaW5dID0gcHJvZ3JhbS5lbmRfdGltZS5zcGxpdCgnOicpLm1hcChOdW1iZXIpO1xuICAgICAgXG4gICAgICAvLyBTb2xvIHJldmlzYXIgcHJvZ3JhbWFzIHF1ZSBlbXBpZXphbiB0YXJkZSAoZGVzcHXDqXMgZGUgbGFzIDIwOjAwKVxuICAgICAgaWYgKHN0YXJ0SG91ciA+PSAyMCkge1xuICAgICAgICBjb25zdCBlbmRNaW51dGVzID0gZW5kSG91ciAqIDYwICsgZW5kTWluO1xuICAgICAgICBcbiAgICAgICAgLy8gU2kgZWwgcHJvZ3JhbWEgZGVsIGTDrWEgYW50ZXJpb3IgY3J1emEgYSBob3lcbiAgICAgICAgaWYgKGVuZEhvdXIgPCAxMiAmJiBjdXJyZW50VGltZU1pbnV0ZXMgPCBlbmRNaW51dGVzKSB7XG4gICAgICAgICAgY3VycmVudFByb2dyYW1DYWNoZVV0aWxzLnNldChzdGF0aW9uSWQsIHByb2dyYW0pO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDwn5K+IFByb2dyYW1hIGFjdHVhbCBkZSAke3N0YXRpb25JZH0gY2FjaGVhZG9gKTtcbiAgICAgICAgICByZXR1cm4gcHJvZ3JhbTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBcbiAgLy8gQ2FjaGVhciBudWxsIHRhbWJpw6luIHBhcmEgZXZpdGFyIGLDunNxdWVkYXMgcmVwZXRpZGFzXG4gIGN1cnJlbnRQcm9ncmFtQ2FjaGVVdGlscy5zZXQoc3RhdGlvbklkLCBudWxsKTtcbiAgY29uc29sZS5sb2coYPCfkr4gU2luIHByb2dyYW1hIGFjdHVhbCBwYXJhICR7c3RhdGlvbklkfSAtIGNhY2hlYWRvIGNvbW8gbnVsbGApO1xuICByZXR1cm4gbnVsbDtcbn1cblxuLy8gQ3JlYXIgcHJvZ3JhbWFcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVQcm9ncmFtKHByb2dyYW06IE9taXQ8UHJvZ3JhbSwgJ2lkJz4pOiBQcm9taXNlPFByb2dyYW0+IHtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWREYXRhKCk7XG4gIGNvbnN0IG5ld1Byb2dyYW06IFByb2dyYW0gPSB7XG4gICAgLi4ucHJvZ3JhbSxcbiAgICBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpXG4gIH07XG4gIGRhdGEucHJvZ3JhbXMucHVzaChuZXdQcm9ncmFtKTtcbiAgYXdhaXQgd3JpdGVEYXRhKGRhdGEpO1xuICBcbiAgLy8gSW52YWxpZGFyIGNhY2jDqXMgZXNwZWPDrWZpY29zXG4gIHByb2dyYW1zQ2FjaGVVdGlscy5kZWwoJ2FsbF9wcm9ncmFtcycpO1xuICBwcm9ncmFtc0NhY2hlVXRpbHMuZGVsKGBwcm9ncmFtc19zdGF0aW9uXyR7cHJvZ3JhbS5zdGF0aW9uX2lkfWApO1xuICBjdXJyZW50UHJvZ3JhbUNhY2hlVXRpbHMuZGVsKHByb2dyYW0uc3RhdGlvbl9pZCk7XG4gIFxuICByZXR1cm4gbmV3UHJvZ3JhbTtcbn1cblxuLy8gQWN0dWFsaXphciBwcm9ncmFtYVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVByb2dyYW0oaWQ6IHN0cmluZywgdXBkYXRlczogUGFydGlhbDxQcm9ncmFtPik6IFByb21pc2U8UHJvZ3JhbT4ge1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVhZERhdGEoKTtcbiAgY29uc3QgaW5kZXggPSBkYXRhLnByb2dyYW1zLmZpbmRJbmRleChwID0+IHAuaWQgPT09IGlkKTtcbiAgaWYgKGluZGV4ID09PSAtMSkgdGhyb3cgbmV3IEVycm9yKCdQcm9ncmFtYSBubyBlbmNvbnRyYWRvJyk7XG4gIFxuICBjb25zdCBvbGRQcm9ncmFtID0gZGF0YS5wcm9ncmFtc1tpbmRleF07XG4gIGRhdGEucHJvZ3JhbXNbaW5kZXhdID0geyAuLi5vbGRQcm9ncmFtLCAuLi51cGRhdGVzIH07XG4gIGF3YWl0IHdyaXRlRGF0YShkYXRhKTtcbiAgXG4gIC8vIEludmFsaWRhciBjYWNow6lzIGVzcGVjw61maWNvc1xuICBwcm9ncmFtc0NhY2hlVXRpbHMuZGVsKCdhbGxfcHJvZ3JhbXMnKTtcbiAgcHJvZ3JhbXNDYWNoZVV0aWxzLmRlbChgcHJvZ3JhbXNfc3RhdGlvbl8ke29sZFByb2dyYW0uc3RhdGlvbl9pZH1gKTtcbiAgY3VycmVudFByb2dyYW1DYWNoZVV0aWxzLmRlbChvbGRQcm9ncmFtLnN0YXRpb25faWQpO1xuICBcbiAgLy8gU2kgY2FtYmnDsyBsYSBlc3RhY2nDs24sIGludmFsaWRhciB0YW1iacOpbiBsYSBudWV2YVxuICBpZiAodXBkYXRlcy5zdGF0aW9uX2lkICYmIHVwZGF0ZXMuc3RhdGlvbl9pZCAhPT0gb2xkUHJvZ3JhbS5zdGF0aW9uX2lkKSB7XG4gICAgcHJvZ3JhbXNDYWNoZVV0aWxzLmRlbChgcHJvZ3JhbXNfc3RhdGlvbl8ke3VwZGF0ZXMuc3RhdGlvbl9pZH1gKTtcbiAgICBjdXJyZW50UHJvZ3JhbUNhY2hlVXRpbHMuZGVsKHVwZGF0ZXMuc3RhdGlvbl9pZCk7XG4gIH1cbiAgXG4gIHJldHVybiBkYXRhLnByb2dyYW1zW2luZGV4XTtcbn1cblxuLy8gRWxpbWluYXIgcHJvZ3JhbWFcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVQcm9ncmFtKGlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWREYXRhKCk7XG4gIGNvbnN0IHByb2dyYW0gPSBkYXRhLnByb2dyYW1zLmZpbmQocCA9PiBwLmlkID09PSBpZCk7XG4gIGlmICghcHJvZ3JhbSkgdGhyb3cgbmV3IEVycm9yKCdQcm9ncmFtYSBubyBlbmNvbnRyYWRvJyk7XG4gIFxuICBkYXRhLnByb2dyYW1zID0gZGF0YS5wcm9ncmFtcy5maWx0ZXIocCA9PiBwLmlkICE9PSBpZCk7XG4gIGF3YWl0IHdyaXRlRGF0YShkYXRhKTtcbiAgXG4gIC8vIEludmFsaWRhciBjYWNow6lzIGVzcGVjw61maWNvc1xuICBwcm9ncmFtc0NhY2hlVXRpbHMuZGVsKCdhbGxfcHJvZ3JhbXMnKTtcbiAgcHJvZ3JhbXNDYWNoZVV0aWxzLmRlbChgcHJvZ3JhbXNfc3RhdGlvbl8ke3Byb2dyYW0uc3RhdGlvbl9pZH1gKTtcbiAgY3VycmVudFByb2dyYW1DYWNoZVV0aWxzLmRlbChwcm9ncmFtLnN0YXRpb25faWQpO1xufVxuXG4vLyBDcmVhciBlc3RhY2nDs25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVTdGF0aW9uKHN0YXRpb25EYXRhOiBQYXJ0aWFsPFN0YXRpb24+KTogUHJvbWlzZTxTdGF0aW9uPiB7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZWFkRGF0YSgpO1xuICBjb25zdCBuZXdTdGF0aW9uOiBTdGF0aW9uID0ge1xuICAgIGlkOiBEYXRlLm5vdygpLnRvU3RyaW5nKCksXG4gICAgbmFtZTogc3RhdGlvbkRhdGEubmFtZSB8fCAnJyxcbiAgICB1cmw6IHN0YXRpb25EYXRhLnVybCB8fCAnJyxcbiAgICBpbWFnZTogc3RhdGlvbkRhdGEuaW1hZ2UsXG4gICAgZnJlcXVlbmN5OiBzdGF0aW9uRGF0YS5mcmVxdWVuY3ksXG4gICAgY2l0eTogc3RhdGlvbkRhdGEuY2l0eSxcbiAgICBkZXNjcmlwdGlvbjogc3RhdGlvbkRhdGEuZGVzY3JpcHRpb25cbiAgfTtcbiAgZGF0YS5zdGF0aW9ucy5wdXNoKG5ld1N0YXRpb24pO1xuICBhd2FpdCB3cml0ZURhdGEoZGF0YSk7XG4gIFxuICAvLyBJbnZhbGlkYXIgY2FjaMOpIGRlIGVzdGFjaW9uZXNcbiAgc3RhdGlvbnNDYWNoZVV0aWxzLmRlbCgnYWxsX3N0YXRpb25zJyk7XG4gIFxuICByZXR1cm4gbmV3U3RhdGlvbjtcbn1cblxuLy8gQWN0dWFsaXphciBlc3RhY2nDs25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVTdGF0aW9uKGlkOiBzdHJpbmcsIHVwZGF0ZXM6IFBhcnRpYWw8U3RhdGlvbj4pOiBQcm9taXNlPFN0YXRpb24+IHtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWREYXRhKCk7XG4gIGNvbnN0IGluZGV4ID0gZGF0YS5zdGF0aW9ucy5maW5kSW5kZXgocyA9PiBzLmlkID09PSBpZCk7XG4gIGlmIChpbmRleCA9PT0gLTEpIHRocm93IG5ldyBFcnJvcignRXN0YWNpw7NuIG5vIGVuY29udHJhZGEnKTtcbiAgXG4gIGRhdGEuc3RhdGlvbnNbaW5kZXhdID0geyAuLi5kYXRhLnN0YXRpb25zW2luZGV4XSwgLi4udXBkYXRlcyB9O1xuICBhd2FpdCB3cml0ZURhdGEoZGF0YSk7XG4gIFxuICAvLyBJbnZhbGlkYXIgY2FjaMOpIGRlIGVzdGFjaW9uZXNcbiAgc3RhdGlvbnNDYWNoZVV0aWxzLmRlbCgnYWxsX3N0YXRpb25zJyk7XG4gIFxuICByZXR1cm4gZGF0YS5zdGF0aW9uc1tpbmRleF07XG59XG5cbi8vIEVsaW1pbmFyIGVzdGFjacOzblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVN0YXRpb24oaWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVhZERhdGEoKTtcbiAgLy8gRWxpbWluYXIgbGEgZXN0YWNpw7NuXG4gIGRhdGEuc3RhdGlvbnMgPSBkYXRhLnN0YXRpb25zLmZpbHRlcihzID0+IHMuaWQgIT09IGlkKTtcbiAgLy8gRWxpbWluYXIgdG9kb3MgbG9zIHByb2dyYW1hcyBkZSBlc2EgZXN0YWNpw7NuXG4gIGRhdGEucHJvZ3JhbXMgPSBkYXRhLnByb2dyYW1zLmZpbHRlcihwID0+IHAuc3RhdGlvbl9pZCAhPT0gaWQpO1xuICBhd2FpdCB3cml0ZURhdGEoZGF0YSk7XG4gIFxuICAvLyBJbnZhbGlkYXIgdG9kb3MgbG9zIGNhY2jDqXMgcmVsYWNpb25hZG9zXG4gIHN0YXRpb25zQ2FjaGVVdGlscy5kZWwoJ2FsbF9zdGF0aW9ucycpO1xuICBwcm9ncmFtc0NhY2hlVXRpbHMuZGVsKCdhbGxfcHJvZ3JhbXMnKTtcbiAgcHJvZ3JhbXNDYWNoZVV0aWxzLmRlbChgcHJvZ3JhbXNfc3RhdGlvbl8ke2lkfWApO1xuICBjdXJyZW50UHJvZ3JhbUNhY2hlVXRpbHMuZGVsKGlkKTtcbn0iXSwibmFtZXMiOlsiZnMiLCJwYXRoIiwic3RhdGlvbnNDYWNoZVV0aWxzIiwicHJvZ3JhbXNDYWNoZVV0aWxzIiwiY3VycmVudFByb2dyYW1DYWNoZVV0aWxzIiwiREFUQV9GSUxFIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJmaWxlQ2FjaGUiLCJkYXRhIiwidGltZXN0YW1wIiwiRklMRV9DQUNIRV9UVEwiLCJpbml0RGF0YUZpbGUiLCJhY2Nlc3MiLCJpbml0aWFsRGF0YSIsInN0YXRpb25zIiwiaWQiLCJuYW1lIiwidXJsIiwiaW1hZ2UiLCJmcmVxdWVuY3kiLCJjaXR5IiwiZGVzY3JpcHRpb24iLCJwcm9ncmFtcyIsIndlZWtkYXlQcm9ncmFtcyIsImhvc3QiLCJzdGFydF90aW1lIiwiZW5kX3RpbWUiLCJzYXR1cmRheVByb2dyYW1zIiwic3VuZGF5UHJvZ3JhbXMiLCJwcm9ncmFtSWQiLCJzdGF0aW9uIiwicHJvZ3JhbSIsInB1c2giLCJ0b1N0cmluZyIsInN0YXRpb25faWQiLCJkYXlzIiwid3JpdGVGaWxlIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbnNvbGUiLCJsb2ciLCJsZW5ndGgiLCJyZWFkRGF0YSIsIm5vdyIsIkRhdGUiLCJyZWFkRmlsZSIsInBhcnNlZCIsInBhcnNlIiwid3JpdGVEYXRhIiwiZmx1c2giLCJnZXRTdGF0aW9ucyIsImNhY2hlS2V5IiwiY2FjaGVkIiwiZ2V0Iiwic2V0IiwiZ2V0UHJvZ3JhbXMiLCJnZXRQcm9ncmFtc0J5U3RhdGlvbiIsInN0YXRpb25JZCIsImZpbHRlciIsInAiLCJnZXRDdXJyZW50UHJvZ3JhbSIsInVuZGVmaW5lZCIsInV0YyIsImdldFRpbWUiLCJnZXRUaW1lem9uZU9mZnNldCIsInBlcnVUaW1lIiwiY3VycmVudEhvdXIiLCJnZXRIb3VycyIsImN1cnJlbnRNaW51dGUiLCJnZXRNaW51dGVzIiwiY3VycmVudFRpbWVNaW51dGVzIiwiY3VycmVudERheSIsImdldERheSIsInN0YXRpb25Qcm9ncmFtcyIsImluY2x1ZGVzIiwic3RhcnRIb3VyIiwic3RhcnRNaW4iLCJzcGxpdCIsIm1hcCIsIk51bWJlciIsImVuZEhvdXIiLCJlbmRNaW4iLCJzdGFydE1pbnV0ZXMiLCJlbmRNaW51dGVzIiwieWVzdGVyZGF5SW5kZXgiLCJ5ZXN0ZXJkYXlOYW1lIiwiY3JlYXRlUHJvZ3JhbSIsIm5ld1Byb2dyYW0iLCJkZWwiLCJ1cGRhdGVQcm9ncmFtIiwidXBkYXRlcyIsImluZGV4IiwiZmluZEluZGV4IiwiRXJyb3IiLCJvbGRQcm9ncmFtIiwiZGVsZXRlUHJvZ3JhbSIsImZpbmQiLCJjcmVhdGVTdGF0aW9uIiwic3RhdGlvbkRhdGEiLCJuZXdTdGF0aW9uIiwidXBkYXRlU3RhdGlvbiIsInMiLCJkZWxldGVTdGF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/dataManager.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/node-cache","vendor-chunks/clone"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstations%2Froute&page=%2Fapi%2Fstations%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstations%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA%5Capp-exitosa-playerV4-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();